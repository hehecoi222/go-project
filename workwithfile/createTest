package main

import (
	"encoding/json"
	"os"
)

type testIn []struct {
	N int `json:"N"` //Change me
	A int `json:"A"`
	D int `json:"D"`
}

type testOut []struct {
	Output int `json:"Output"` //Change me
}

// Put func here

func sum_of_ap(n,a,d int) int  {
	return n*(a+a+(n-1)*d)/2
}

// End func

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func workFile() testIn {
	fi, e := os.Open("testIn.json")
	check(e)
	defer fi.Close()

	var testIn testIn

	json.NewDecoder(fi).Decode(&testIn)
	return testIn
}

func writeFile(testOut testOut) {
	fo, e := os.Create("testOut.json")
	check(e)
	defer fo.Close()
	json.NewEncoder(fo).Encode(testOut)
}

func main() {
	testIn := workFile()
	testOut := make(testOut, len(testIn))
	for i := range testIn {
		testOut[i].Output = sum_of_ap(testIn[i].N,testIn[i].A,testIn[i].D)
	}
	writeFile(testOut)
}
